-- MySQL Script generated by MySQL Workbench
-- Tue Dec  6 22:29:59 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema LinkedKTU
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema LinkedKTU
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `LinkedKTU` DEFAULT CHARACTER SET utf8 ;
USE `LinkedKTU` ;

-- -----------------------------------------------------
-- Table `LinkedKTU`.`Student`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LinkedKTU`.`Student` (
  `ID` INT NOT NULL,
  `Email` VARCHAR(45) NOT NULL,
  `Password` VARCHAR(45) NOT NULL,
  `Fullname` VARCHAR(45) NOT NULL,
  `Description` VARCHAR(100) NULL,
  `Image` BLOB NULL,
  `Phone` VARCHAR(10) NULL,
  `Address` VARCHAR(100) NULL,
  `School` VARCHAR(45) NOT NULL,
  `City` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `LinkedKTU`.`Lecturer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LinkedKTU`.`Lecturer` (
  `ID` INT NOT NULL,
  `Email` VARCHAR(45) NOT NULL,
  `Password` VARCHAR(45) NOT NULL,
  `Fullname` VARCHAR(45) NOT NULL,
  `Description` VARCHAR(100) NULL,
  `Image` BLOB NULL,
  `Phone` VARCHAR(10) NULL,
  `Address` VARCHAR(100) NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `LinkedKTU`.`Employer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LinkedKTU`.`Employer` (
  `ID` INT NOT NULL,
  `Email` VARCHAR(45) NOT NULL,
  `Password` VARCHAR(45) NOT NULL,
  `Fullname` VARCHAR(45) NOT NULL,
  `Description` VARCHAR(100) NULL,
  `Image` BLOB NULL,
  `Phone` VARCHAR(10) NULL,
  `Address` VARCHAR(100) NULL,
  `IsInternshipRemote` TINYINT NOT NULL,
  `IsWorkRemote` TINYINT NOT NULL,
  `City` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `LinkedKTU`.`Approved_Students`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LinkedKTU`.`Approved_Students` (
  `Student_ID` INT NOT NULL,
  `Lecturer_ID` INT NOT NULL,
  PRIMARY KEY (`Student_ID`, `Lecturer_ID`),
  INDEX `fk_Student_has_Lecturer_Lecturer1_idx` (`Lecturer_ID` ASC) VISIBLE,
  INDEX `fk_Student_has_Lecturer_Student_idx` (`Student_ID` ASC) VISIBLE,
  CONSTRAINT `fk_Student_has_Lecturer_Student`
    FOREIGN KEY (`Student_ID`)
    REFERENCES `LinkedKTU`.`Student` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Student_has_Lecturer_Lecturer1`
    FOREIGN KEY (`Lecturer_ID`)
    REFERENCES `LinkedKTU`.`Lecturer` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `LinkedKTU`.`Languages`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LinkedKTU`.`Languages` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `Lang_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `LinkedKTU`.`Technologies`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LinkedKTU`.`Technologies` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `Tech_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `LinkedKTU`.`Student_Languages`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LinkedKTU`.`Student_Languages` (
  `Languages_ID` INT NOT NULL,
  `Student_ID` INT NOT NULL,
  PRIMARY KEY (`Languages_ID`, `Student_ID`),
  INDEX `fk_Languages_has_Student_Student1_idx` (`Student_ID` ASC) VISIBLE,
  INDEX `fk_Languages_has_Student_Languages1_idx` (`Languages_ID` ASC) VISIBLE,
  CONSTRAINT `fk_Languages_has_Student_Languages1`
    FOREIGN KEY (`Languages_ID`)
    REFERENCES `LinkedKTU`.`Languages` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Languages_has_Student_Student1`
    FOREIGN KEY (`Student_ID`)
    REFERENCES `LinkedKTU`.`Student` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `LinkedKTU`.`Student_Technologies`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LinkedKTU`.`Student_Technologies` (
  `Student_ID` INT NOT NULL,
  `Technologies_ID` INT NOT NULL,
  PRIMARY KEY (`Student_ID`, `Technologies_ID`),
  INDEX `fk_Student_has_Technologies_Technologies1_idx` (`Technologies_ID` ASC) VISIBLE,
  INDEX `fk_Student_has_Technologies_Student1_idx` (`Student_ID` ASC) VISIBLE,
  CONSTRAINT `fk_Student_has_Technologies_Student1`
    FOREIGN KEY (`Student_ID`)
    REFERENCES `LinkedKTU`.`Student` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Student_has_Technologies_Technologies1`
    FOREIGN KEY (`Technologies_ID`)
    REFERENCES `LinkedKTU`.`Technologies` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `LinkedKTU`.`Employer_Languages`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LinkedKTU`.`Employer_Languages` (
  `Employer_ID` INT NOT NULL,
  `Languages_ID` INT NOT NULL,
  PRIMARY KEY (`Employer_ID`, `Languages_ID`),
  INDEX `fk_Employer_has_Languages_Languages1_idx` (`Languages_ID` ASC) VISIBLE,
  INDEX `fk_Employer_has_Languages_Employer1_idx` (`Employer_ID` ASC) VISIBLE,
  CONSTRAINT `fk_Employer_has_Languages_Employer1`
    FOREIGN KEY (`Employer_ID`)
    REFERENCES `LinkedKTU`.`Employer` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Employer_has_Languages_Languages1`
    FOREIGN KEY (`Languages_ID`)
    REFERENCES `LinkedKTU`.`Languages` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `LinkedKTU`.`Employer_Technologies`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LinkedKTU`.`Employer_Technologies` (
  `Employer_ID` INT NOT NULL,
  `Technologies_ID` INT NOT NULL,
  PRIMARY KEY (`Employer_ID`, `Technologies_ID`),
  INDEX `fk_Employer_has_Technologies_Technologies1_idx` (`Technologies_ID` ASC) VISIBLE,
  INDEX `fk_Employer_has_Technologies_Employer1_idx` (`Employer_ID` ASC) VISIBLE,
  CONSTRAINT `fk_Employer_has_Technologies_Employer1`
    FOREIGN KEY (`Employer_ID`)
    REFERENCES `LinkedKTU`.`Employer` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Employer_has_Technologies_Technologies1`
    FOREIGN KEY (`Technologies_ID`)
    REFERENCES `LinkedKTU`.`Technologies` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `LinkedKTU`.`Post`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LinkedKTU`.`Post` (
  `ID` INT NOT NULL,
  `Title` VARCHAR(45) NOT NULL,
  `Description` VARCHAR(100) NOT NULL,
  `Role` VARCHAR(45) NOT NULL,
  `Company` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `LinkedKTU`.`Post_Technologies`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LinkedKTU`.`Post_Technologies` (
  `Post_ID` INT NOT NULL,
  `Technologies_ID` INT NOT NULL,
  PRIMARY KEY (`Post_ID`, `Technologies_ID`),
  INDEX `fk_Post_has_Technologies_Technologies1_idx` (`Technologies_ID` ASC) VISIBLE,
  INDEX `fk_Post_has_Technologies_Post1_idx` (`Post_ID` ASC) VISIBLE,
  CONSTRAINT `fk_Post_has_Technologies_Post1`
    FOREIGN KEY (`Post_ID`)
    REFERENCES `LinkedKTU`.`Post` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Post_has_Technologies_Technologies1`
    FOREIGN KEY (`Technologies_ID`)
    REFERENCES `LinkedKTU`.`Technologies` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `LinkedKTU`.`JobPost`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LinkedKTU`.`JobPost` (
  `ID` INT NOT NULL,
  `Title` VARCHAR(45) NOT NULL,
  `Description` VARCHAR(100) NOT NULL,
  `Role` VARCHAR(45) NOT NULL,
  `IsRemote` TINYINT NOT NULL,
  `Salary` INT NOT NULL,
  `Employer_ID` INT NOT NULL,
  PRIMARY KEY (`ID`, `Employer_ID`),
  INDEX `fk_JobPost_Employer1_idx` (`Employer_ID` ASC) VISIBLE,
  CONSTRAINT `fk_JobPost_Employer1`
    FOREIGN KEY (`Employer_ID`)
    REFERENCES `LinkedKTU`.`Employer` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `LinkedKTU`.`Student_Applies_Job`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `LinkedKTU`.`Student_Applies_Job` (
  `Student_ID` INT NOT NULL,
  `JobPost_ID` INT NOT NULL,
  `Ä°sAccepted` TINYINT NULL,
  PRIMARY KEY (`Student_ID`, `JobPost_ID`),
  INDEX `fk_Student_has_JobPost_JobPost1_idx` (`JobPost_ID` ASC) VISIBLE,
  INDEX `fk_Student_has_JobPost_Student1_idx` (`Student_ID` ASC) VISIBLE,
  CONSTRAINT `fk_Student_has_JobPost_Student1`
    FOREIGN KEY (`Student_ID`)
    REFERENCES `LinkedKTU`.`Student` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Student_has_JobPost_JobPost1`
    FOREIGN KEY (`JobPost_ID`)
    REFERENCES `LinkedKTU`.`JobPost` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
